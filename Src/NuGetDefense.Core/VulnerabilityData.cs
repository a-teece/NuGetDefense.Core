using System.Collections.Generic;
using System.IO;
using MessagePack;

namespace NuGetDefense
{
    public static class VulnerabilityData
    {
        public static void SaveToBinFile(
            Dictionary<string, Dictionary<string, VulnerabilityEntry>> vulnerabilityDictionary,
            string binPath)
        {
            var lz4Options = MessagePackSerializerOptions.Standard.WithCompression(MessagePackCompression.Lz4BlockArray)
                .WithSecurity(MessagePackSecurity.UntrustedData);

            var dictBytes = MessagePackSerializer
                .Serialize(vulnerabilityDictionary, lz4Options);

            File.WriteAllBytes(binPath, dictBytes);
        }

        public static Dictionary<string, Dictionary<string, VulnerabilityEntry>> LoadFromBinFile(string binPath)
        {
            var lz4Options = MessagePackSerializerOptions.Standard.WithCompression(MessagePackCompression.Lz4BlockArray)
                .WithSecurity(MessagePackSecurity.UntrustedData);
            var vulnDataFile = binPath;

            using var nvdData = File.Open(vulnDataFile, FileMode.Open, FileAccess.Read);
            return MessagePackSerializer
                .Deserialize<
                    Dictionary<string, Dictionary<string, VulnerabilityEntry>>>(nvdData, lz4Options);
        }
    }
}